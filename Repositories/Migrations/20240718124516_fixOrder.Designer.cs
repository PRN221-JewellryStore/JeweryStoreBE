// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories;

#nullable disable

namespace Repositories.Migrations
{
    [DbContext(typeof(JeweryStoreDBContext))]
    [Migration("20240718124516_fixOrder")]
    partial class fixOrder
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObjecs.Models.Configured.CategoryEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastestUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdaterID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Vòng cổ"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Vòng tay"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Nhẫn"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Đồng hồ"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Bông tai"
                        },
                        new
                        {
                            ID = 6,
                            Name = "Kiềng"
                        },
                        new
                        {
                            ID = 7,
                            Name = "Lắc"
                        });
                });

            modelBuilder.Entity("BusinessObjecs.Models.Configured.CounterEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastestUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdaterID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Counter");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryID = 1,
                            Name = "Vòng cổ Counter"
                        },
                        new
                        {
                            ID = 2,
                            CategoryID = 2,
                            Name = "Vòng tay Counter"
                        },
                        new
                        {
                            ID = 3,
                            CategoryID = 3,
                            Name = "Nhẫn Counter"
                        },
                        new
                        {
                            ID = 4,
                            CategoryID = 4,
                            Name = "Đồng hồ Counter"
                        },
                        new
                        {
                            ID = 5,
                            CategoryID = 5,
                            Name = "Bông tai Counter"
                        },
                        new
                        {
                            ID = 6,
                            CategoryID = 6,
                            Name = "Kiềng Counter"
                        },
                        new
                        {
                            ID = 7,
                            CategoryID = 7,
                            Name = "Lắc Counter"
                        });
                });

            modelBuilder.Entity("BusinessObjecs.Models.Configured.RoleEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastestUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdaterID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Customer"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Manager"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Staff"
                        });
                });

            modelBuilder.Entity("BusinessObjecs.Models.OrderDetailEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastestUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ProductCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdaterID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("BusinessObjecs.Models.OrderEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CounterID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastestUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PrimaryPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PromotionID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdaterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("CounterID");

                    b.HasIndex("PromotionID");

                    b.HasIndex("UserID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("BusinessObjecs.Models.ProductEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastestUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdaterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ID = "7c9baeee-2343-472e-ac73-5b4e6e410b88",
                            CategoryID = 1,
                            Cost = 1000000m,
                            CreatedAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1441),
                            Description = "Vòng cổ 1",
                            LastestUpdateAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1441),
                            Quantity = 5,
                            Weight = 10.5f
                        },
                        new
                        {
                            ID = "649fb470-3c3a-4241-bac2-30d43712ef81",
                            CategoryID = 1,
                            Cost = 1500000m,
                            CreatedAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1453),
                            Description = "Vòng cổ 2",
                            LastestUpdateAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1453),
                            Quantity = 3,
                            Weight = 12f
                        },
                        new
                        {
                            ID = "76ef3887-d484-428d-8459-40ec69e13eae",
                            CategoryID = 2,
                            Cost = 500000m,
                            CreatedAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1481),
                            Description = "Vòng tay 1",
                            LastestUpdateAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1481),
                            Quantity = 10,
                            Weight = 8f
                        },
                        new
                        {
                            ID = "6ed1aaf8-a86b-47f4-810e-77cfb55d8908",
                            CategoryID = 2,
                            Cost = 700000m,
                            CreatedAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1487),
                            Description = "Vòng tay 2",
                            LastestUpdateAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1487),
                            Quantity = 8,
                            Weight = 9f
                        },
                        new
                        {
                            ID = "0be66674-fb1a-42b2-b346-4c7fc1584968",
                            CategoryID = 3,
                            Cost = 2000000m,
                            CreatedAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1493),
                            Description = "Nhẫn 1",
                            LastestUpdateAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1493),
                            Quantity = 4,
                            Weight = 5f
                        },
                        new
                        {
                            ID = "b40974ce-9973-426d-84db-17745caeed29",
                            CategoryID = 3,
                            Cost = 2500000m,
                            CreatedAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1500),
                            Description = "Nhẫn 2",
                            LastestUpdateAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1500),
                            Quantity = 6,
                            Weight = 6f
                        },
                        new
                        {
                            ID = "a82435d7-7d8e-4388-a29c-9e4eacd4a3a5",
                            CategoryID = 4,
                            Cost = 3000000m,
                            CreatedAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1510),
                            Description = "Đồng hồ 1",
                            LastestUpdateAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1510),
                            Quantity = 2,
                            Weight = 50f
                        },
                        new
                        {
                            ID = "7d67236e-e5de-4ead-b1e8-f55bce0b4404",
                            CategoryID = 4,
                            Cost = 3500000m,
                            CreatedAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1586),
                            Description = "Đồng hồ 2",
                            LastestUpdateAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1586),
                            Quantity = 3,
                            Weight = 55f
                        },
                        new
                        {
                            ID = "d8d5f143-d0e6-44c1-b331-1de0f36cad35",
                            CategoryID = 5,
                            Cost = 800000m,
                            CreatedAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1593),
                            Description = "Bông tai 1",
                            LastestUpdateAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1593),
                            Quantity = 12,
                            Weight = 3f
                        },
                        new
                        {
                            ID = "0ede6625-3b3a-435a-8154-59bddc40fd7f",
                            CategoryID = 5,
                            Cost = 900000m,
                            CreatedAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1600),
                            Description = "Bông tai 2",
                            LastestUpdateAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1600),
                            Quantity = 14,
                            Weight = 3.5f
                        },
                        new
                        {
                            ID = "a3a0269f-941d-441b-87ee-0f59aec65679",
                            CategoryID = 6,
                            Cost = 1200000m,
                            CreatedAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1609),
                            Description = "Kiềng 1",
                            LastestUpdateAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1609),
                            Quantity = 7,
                            Weight = 20f
                        },
                        new
                        {
                            ID = "92bcfcbe-1e64-4ac1-bf3f-28055ce36550",
                            CategoryID = 6,
                            Cost = 1400000m,
                            CreatedAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1615),
                            Description = "Kiềng 2",
                            LastestUpdateAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1615),
                            Quantity = 6,
                            Weight = 22f
                        },
                        new
                        {
                            ID = "9a8aabc3-59cb-4dc2-b2ad-d2403f2c419a",
                            CategoryID = 7,
                            Cost = 1000000m,
                            CreatedAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1621),
                            Description = "Lắc 1",
                            LastestUpdateAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1621),
                            Quantity = 9,
                            Weight = 15f
                        },
                        new
                        {
                            ID = "b4c5f0a2-a7cb-4357-a79c-5f6dfd648cd3",
                            CategoryID = 7,
                            Cost = 1100000m,
                            CreatedAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1627),
                            Description = "Lắc 2",
                            LastestUpdateAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1627),
                            Quantity = 8,
                            Weight = 16.5f
                        });
                });

            modelBuilder.Entity("BusinessObjecs.Models.PromotionEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ConditionsOfUse")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiresTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastestUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MaximumReduce")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("ReducedPercent")
                        .HasColumnType("real");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdaterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Promotion");

                    b.HasData(
                        new
                        {
                            ID = "71770830-b7e5-4ec2-a59b-98cc293cb727",
                            ConditionsOfUse = 5000000m,
                            CreatedAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1699),
                            Description = "Summer Sale",
                            ExpiresTime = new DateTime(2024, 8, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1704),
                            LastestUpdateAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1699),
                            MaximumReduce = 500000m,
                            ReducedPercent = 10f,
                            Status = "Active"
                        },
                        new
                        {
                            ID = "15c79315-eefc-40ce-9463-3f9b0f29be01",
                            ConditionsOfUse = 3000000m,
                            CreatedAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1719),
                            Description = "Winter Sale",
                            ExpiresTime = new DateTime(2024, 9, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1723),
                            LastestUpdateAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1719),
                            MaximumReduce = 300000m,
                            ReducedPercent = 15f,
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("BusinessObjecs.Models.UserEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastestUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("UpdaterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            ID = "63963bee-46c2-437e-b438-33cef2bea5c5",
                            Address = "123 Admin St.",
                            CreatedAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1138),
                            Email = "admin@gmail.com",
                            FullName = "Administrator",
                            LastestUpdateAt = new DateTime(2024, 7, 18, 19, 45, 15, 211, DateTimeKind.Local).AddTicks(1110),
                            PasswordHash = "$2b$12$HE0v7UbzZwl6wY3y/jXhR.oYyGo2DWcIRFQatHueQLw4aS1PbeI8y",
                            PhoneNumber = "1234567890",
                            RoleID = 1,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("BusinessObjecs.Models.Configured.CounterEntity", b =>
                {
                    b.HasOne("BusinessObjecs.Models.Configured.CategoryEntity", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BusinessObjecs.Models.OrderDetailEntity", b =>
                {
                    b.HasOne("BusinessObjecs.Models.OrderEntity", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObjecs.Models.ProductEntity", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BusinessObjecs.Models.OrderEntity", b =>
                {
                    b.HasOne("BusinessObjecs.Models.Configured.CounterEntity", "Counter")
                        .WithMany("Orders")
                        .HasForeignKey("CounterID");

                    b.HasOne("BusinessObjecs.Models.PromotionEntity", "Promotion")
                        .WithMany("Orders")
                        .HasForeignKey("PromotionID");

                    b.HasOne("BusinessObjecs.Models.UserEntity", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Counter");

                    b.Navigation("Promotion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObjecs.Models.ProductEntity", b =>
                {
                    b.HasOne("BusinessObjecs.Models.Configured.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BusinessObjecs.Models.PromotionEntity", b =>
                {
                    b.HasOne("BusinessObjecs.Models.UserEntity", "User")
                        .WithMany("Promotions")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObjecs.Models.UserEntity", b =>
                {
                    b.HasOne("BusinessObjecs.Models.Configured.RoleEntity", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BusinessObjecs.Models.Configured.CategoryEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BusinessObjecs.Models.Configured.CounterEntity", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusinessObjecs.Models.Configured.RoleEntity", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BusinessObjecs.Models.OrderEntity", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("BusinessObjecs.Models.ProductEntity", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("BusinessObjecs.Models.PromotionEntity", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusinessObjecs.Models.UserEntity", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Promotions");
                });
#pragma warning restore 612, 618
        }
    }
}
