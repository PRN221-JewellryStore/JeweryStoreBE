// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories;

#nullable disable

namespace Repositories.Migrations
{
    [DbContext(typeof(JeweryStoreDBContext))]
    [Migration("20240722150607_SeedImageUrl")]
    partial class SeedImageUrl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObjecs.Models.Configured.CategoryEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastestUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdaterID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Vòng cổ"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Vòng tay"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Nhẫn"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Đồng hồ"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Bông tai"
                        },
                        new
                        {
                            ID = 6,
                            Name = "Kiềng"
                        },
                        new
                        {
                            ID = 7,
                            Name = "Lắc"
                        });
                });

            modelBuilder.Entity("BusinessObjecs.Models.Configured.RoleEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastestUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdaterID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Customer"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Manager"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Staff"
                        });
                });

            modelBuilder.Entity("BusinessObjecs.Models.OrderDetailEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastestUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ProductCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdaterID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("BusinessObjecs.Models.OrderEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastestUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PrimaryPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PromotionID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdaterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("PromotionID");

                    b.HasIndex("UserID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("BusinessObjecs.Models.ProductEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastestUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdaterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ID = "6287441d-0cf4-49d2-8b13-97ae9f76a170",
                            CategoryID = 1,
                            Cost = 1000000m,
                            CreatedAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5501),
                            Description = "Vòng cổ 1",
                            ImgUrl = "https://firebasestorage.googleapis.com/v0/b/prn221project-1bdc7.appspot.com/o/assets%2Fp1.png.png?alt=media&token=b2d74777-f9de-4a25-b0ff-52a31a1863f2",
                            LastestUpdateAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5501),
                            Name = "Vòng cổ 1",
                            Quantity = 5,
                            Weight = 10.5f
                        },
                        new
                        {
                            ID = "f7b988ee-bd5d-45e2-a9cf-16ddc149628a",
                            CategoryID = 1,
                            Cost = 1500000m,
                            CreatedAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5518),
                            Description = "Vòng cổ 2",
                            ImgUrl = "https://firebasestorage.googleapis.com/v0/b/prn221project-1bdc7.appspot.com/o/assets%2Fp2.png.png?alt=media&token=a93ff335-a5da-4309-ae29-51b4500c6402",
                            LastestUpdateAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5518),
                            Name = "Vòng cổ 2",
                            Quantity = 3,
                            Weight = 12f
                        },
                        new
                        {
                            ID = "dbe130db-58c1-4d58-93f0-b741b739aeec",
                            CategoryID = 2,
                            Cost = 500000m,
                            CreatedAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5528),
                            Description = "Vòng tay 1",
                            ImgUrl = "https://firebasestorage.googleapis.com/v0/b/prn221project-1bdc7.appspot.com/o/assets%2Fp3.png.png?alt=media&token=dc618717-aa96-490b-9a2b-dd42ece0a55f",
                            LastestUpdateAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5528),
                            Name = "Vòng tay 1",
                            Quantity = 10,
                            Weight = 8f
                        },
                        new
                        {
                            ID = "dfa2bdb4-2818-4fb1-b02b-d115bfa15772",
                            CategoryID = 2,
                            Cost = 700000m,
                            CreatedAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5541),
                            Description = "Vòng tay 2",
                            ImgUrl = "https://firebasestorage.googleapis.com/v0/b/prn221project-1bdc7.appspot.com/o/assets%2Fp4.png.png?alt=media&token=0d8d2339-7c58-4d7c-b5be-863c45834423",
                            LastestUpdateAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5541),
                            Name = "Vòng tay 2",
                            Quantity = 8,
                            Weight = 9f
                        },
                        new
                        {
                            ID = "e4ddbc79-10b7-4290-84d0-0e08a1382796",
                            CategoryID = 3,
                            Cost = 2000000m,
                            CreatedAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5556),
                            Description = "Nhẫn 1",
                            ImgUrl = "https://firebasestorage.googleapis.com/v0/b/prn221project-1bdc7.appspot.com/o/assets%2Fp5.png.png?alt=media&token=152b1990-5dfd-4de1-b548-94f6410655d5",
                            LastestUpdateAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5556),
                            Name = "Nhẫn 1",
                            Quantity = 4,
                            Weight = 5f
                        },
                        new
                        {
                            ID = "d2b2bead-3b51-4758-bb80-76a84ccf37d6",
                            CategoryID = 3,
                            Cost = 2500000m,
                            CreatedAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5572),
                            Description = "Nhẫn 2",
                            ImgUrl = "https://firebasestorage.googleapis.com/v0/b/prn221project-1bdc7.appspot.com/o/assets%2Fp6.png.png?alt=media&token=732f4160-e52c-4ac0-a870-590b598362fa",
                            LastestUpdateAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5572),
                            Name = "Nhẫn 2",
                            Quantity = 6,
                            Weight = 6f
                        },
                        new
                        {
                            ID = "95c5902a-101d-4140-99d7-a3271acce0d8",
                            CategoryID = 4,
                            Cost = 3000000m,
                            CreatedAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5582),
                            Description = "Đồng hồ 1",
                            ImgUrl = "https://firebasestorage.googleapis.com/v0/b/prn221project-1bdc7.appspot.com/o/assets%2Fp7.png.png?alt=media&token=4bb468c4-d12b-45a3-8e2c-f478b234273a",
                            LastestUpdateAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5582),
                            Name = "Đồng hồ 1",
                            Quantity = 2,
                            Weight = 50f
                        },
                        new
                        {
                            ID = "c9a9c529-00d3-4fe9-8a61-309249ea958a",
                            CategoryID = 4,
                            Cost = 3500000m,
                            CreatedAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5593),
                            Description = "Đồng hồ 2",
                            ImgUrl = "https://firebasestorage.googleapis.com/v0/b/prn221project-1bdc7.appspot.com/o/assets%2Fp8.png.png?alt=media&token=51ca5f42-ea17-41ae-867a-6abd87a193a4",
                            LastestUpdateAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5593),
                            Name = "Đồng hồ 2",
                            Quantity = 3,
                            Weight = 55f
                        },
                        new
                        {
                            ID = "e042a170-73d2-4e5b-a273-99fcc469ee08",
                            CategoryID = 5,
                            Cost = 800000m,
                            CreatedAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5609),
                            Description = "Bông tai 1",
                            ImgUrl = "https://firebasestorage.googleapis.com/v0/b/prn221project-1bdc7.appspot.com/o/assets%2Fo1.jpg?alt=media&token=4aeac259-9a2a-47a4-a24c-af63322f8e62",
                            LastestUpdateAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5609),
                            Name = "Bông tai 1",
                            Quantity = 12,
                            Weight = 3f
                        },
                        new
                        {
                            ID = "1dc3b8e4-538b-430f-88af-e718a3b7f9ec",
                            CategoryID = 5,
                            Cost = 900000m,
                            CreatedAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5620),
                            Description = "Bông tai 2",
                            ImgUrl = "https://firebasestorage.googleapis.com/v0/b/prn221project-1bdc7.appspot.com/o/assets%2Fo2.jpg?alt=media&token=d3b10b84-a051-4e5d-a949-07d175177cce",
                            LastestUpdateAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5620),
                            Name = "Bông tai 2",
                            Quantity = 14,
                            Weight = 3.5f
                        },
                        new
                        {
                            ID = "7866ad36-2f33-4da0-947c-3bc8f2556fbc",
                            CategoryID = 6,
                            Cost = 1200000m,
                            CreatedAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5630),
                            Description = "Kiềng 1",
                            ImgUrl = "https://firebasestorage.googleapis.com/v0/b/prn221project-1bdc7.appspot.com/o/assets%2Fo3.jpg?alt=media&token=7fb28e19-a4bf-4095-b67f-a3a534781d8d",
                            LastestUpdateAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5630),
                            Name = "Kiềng 1",
                            Quantity = 7,
                            Weight = 20f
                        },
                        new
                        {
                            ID = "1a8a2e2e-f693-45ff-a5d3-084138ce979e",
                            CategoryID = 6,
                            Cost = 1400000m,
                            CreatedAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5640),
                            Description = "Kiềng 2",
                            ImgUrl = "https://firebasestorage.googleapis.com/v0/b/prn221project-1bdc7.appspot.com/o/assets%2Fo4.png?alt=media&token=c160c486-861d-4d7f-b402-9bd00b034056",
                            LastestUpdateAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5640),
                            Name = "Kiềng 2",
                            Quantity = 6,
                            Weight = 22f
                        },
                        new
                        {
                            ID = "a9e34ac5-965a-4e46-b042-d140abf990a0",
                            CategoryID = 7,
                            Cost = 1000000m,
                            CreatedAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5653),
                            Description = "Lắc 1",
                            ImgUrl = "https://firebasestorage.googleapis.com/v0/b/prn221project-1bdc7.appspot.com/o/assets%2Fo5.jpg?alt=media&token=601f08e1-2442-4cfe-93cf-7ff4c61a7b9e",
                            LastestUpdateAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5653),
                            Name = "Lắc 1",
                            Quantity = 9,
                            Weight = 15f
                        },
                        new
                        {
                            ID = "1d74c67f-67cd-493a-a993-a30faf04796b",
                            CategoryID = 7,
                            Cost = 1100000m,
                            CreatedAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5663),
                            Description = "Lắc 2",
                            ImgUrl = "https://firebasestorage.googleapis.com/v0/b/prn221project-1bdc7.appspot.com/o/assets%2Fo6.jpg?alt=media&token=5d3cfb40-30f4-4343-96cc-9fe016b1c0c8",
                            LastestUpdateAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5663),
                            Name = "Lắc 2",
                            Quantity = 8,
                            Weight = 16.5f
                        });
                });

            modelBuilder.Entity("BusinessObjecs.Models.PromotionEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ConditionsOfUse")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiresTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastestUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MaximumReduce")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("ReducedPercent")
                        .HasColumnType("real");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdaterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Promotion");

                    b.HasData(
                        new
                        {
                            ID = "fc1b202b-1bdb-4df8-9d9e-43211882fa77",
                            ConditionsOfUse = 5000000m,
                            CreatedAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5764),
                            Description = "Summer Sale",
                            ExpiresTime = new DateTime(2024, 8, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5772),
                            LastestUpdateAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5764),
                            MaximumReduce = 500000m,
                            ReducedPercent = 10f,
                            Status = "Active"
                        },
                        new
                        {
                            ID = "d87285d0-2ee0-4041-acac-14fa13555dad",
                            ConditionsOfUse = 3000000m,
                            CreatedAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5793),
                            Description = "Winter Sale",
                            ExpiresTime = new DateTime(2024, 9, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5799),
                            LastestUpdateAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5793),
                            MaximumReduce = 300000m,
                            ReducedPercent = 15f,
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("BusinessObjecs.Models.UserEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastestUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("UpdaterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            ID = "09afea9e-c569-402b-b4c4-dd74292e8aec",
                            Address = "123 Admin St.",
                            CreatedAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5086),
                            Email = "admin@gmail.com",
                            FullName = "Administrator",
                            LastestUpdateAt = new DateTime(2024, 7, 22, 22, 6, 6, 267, DateTimeKind.Local).AddTicks(5054),
                            PasswordHash = "$2b$12$HE0v7UbzZwl6wY3y/jXhR.oYyGo2DWcIRFQatHueQLw4aS1PbeI8y",
                            PhoneNumber = "1234567890",
                            RoleID = 1,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("BusinessObjecs.Models.OrderDetailEntity", b =>
                {
                    b.HasOne("BusinessObjecs.Models.OrderEntity", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObjecs.Models.ProductEntity", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BusinessObjecs.Models.OrderEntity", b =>
                {
                    b.HasOne("BusinessObjecs.Models.PromotionEntity", "Promotion")
                        .WithMany("Orders")
                        .HasForeignKey("PromotionID");

                    b.HasOne("BusinessObjecs.Models.UserEntity", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Promotion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObjecs.Models.ProductEntity", b =>
                {
                    b.HasOne("BusinessObjecs.Models.Configured.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BusinessObjecs.Models.PromotionEntity", b =>
                {
                    b.HasOne("BusinessObjecs.Models.UserEntity", "User")
                        .WithMany("Promotions")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObjecs.Models.UserEntity", b =>
                {
                    b.HasOne("BusinessObjecs.Models.Configured.RoleEntity", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BusinessObjecs.Models.Configured.CategoryEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BusinessObjecs.Models.Configured.RoleEntity", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BusinessObjecs.Models.OrderEntity", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("BusinessObjecs.Models.ProductEntity", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("BusinessObjecs.Models.PromotionEntity", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusinessObjecs.Models.UserEntity", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Promotions");
                });
#pragma warning restore 612, 618
        }
    }
}
